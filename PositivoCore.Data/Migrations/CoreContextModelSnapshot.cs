// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PositivoCore.Data.Context;

namespace PositivoCore.Data.Migrations
{
    [DbContext(typeof(CoreContext))]
    partial class CoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PositivoCore.Domain.Entities.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("PositivoCore.Domain.Entities.Disciplina", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("Disciplina");
                });

            modelBuilder.Entity("PositivoCore.Domain.Entities.Escola", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Escola");
                });

            modelBuilder.Entity("PositivoCore.Domain.Entities.NivelEnsino", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("NivelEnsino");
                });

            modelBuilder.Entity("PositivoCore.Domain.Entities.Professor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("PositivoCore.Domain.Entities.Serie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<Guid>("IdNivelEnsino")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("IdNivelEnsino");

                    b.ToTable("Serie");
                });

            modelBuilder.Entity("PositivoCore.Domain.Entities.Turma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<Guid>("IdEscola")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSerie")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("IdEscola");

                    b.HasIndex("IdSerie");

                    b.ToTable("Turma");
                });

            modelBuilder.Entity("PositivoCore.Domain.Entities.TurmaDisciplinaProfessor", b =>
                {
                    b.Property<Guid>("DisciplinaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.HasKey("DisciplinaId", "ProfessorId", "TurmaId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("TurmaId");

                    b.ToTable("TurmaDisciplinaProfessor");
                });

            modelBuilder.Entity("PositivoCore.Domain.Entities.Escola", b =>
                {
                    b.OwnsOne("PositivoCore.Domain.ValueObjects.CNPJ", "CNPJ", b1 =>
                        {
                            b1.Property<Guid>("EscolaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnName("CNPJ")
                                .HasColumnType("nvarchar(14)")
                                .HasMaxLength(14);

                            b1.HasKey("EscolaId");

                            b1.ToTable("Escola");

                            b1.WithOwner()
                                .HasForeignKey("EscolaId");
                        });
                });

            modelBuilder.Entity("PositivoCore.Domain.Entities.Serie", b =>
                {
                    b.HasOne("PositivoCore.Domain.Entities.NivelEnsino", "NivelEnsino")
                        .WithMany("Series")
                        .HasForeignKey("IdNivelEnsino")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PositivoCore.Domain.Entities.Turma", b =>
                {
                    b.HasOne("PositivoCore.Domain.Entities.Escola", "Escola")
                        .WithMany("Turmas")
                        .HasForeignKey("IdEscola")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PositivoCore.Domain.Entities.Serie", "Serie")
                        .WithMany("Turmas")
                        .HasForeignKey("IdSerie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PositivoCore.Domain.Entities.TurmaDisciplinaProfessor", b =>
                {
                    b.HasOne("PositivoCore.Domain.Entities.Disciplina", "Disciplina")
                        .WithMany("TurmasDisciplinasProfessores")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PositivoCore.Domain.Entities.Professor", "Professor")
                        .WithMany("TurmasDisciplinasProfessores")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PositivoCore.Domain.Entities.Turma", "Turma")
                        .WithMany("TurmasDisciplinasProfessores")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
